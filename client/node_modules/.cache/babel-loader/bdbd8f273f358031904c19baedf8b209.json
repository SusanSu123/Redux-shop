{"ast":null,"code":"var _jsxFileName = \"/Users/susan/Downloads/26-Stu_Actions-Reducers/client/src/components/CategoryMenu/index.js\";\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const state = useSelector(state => {\n    return state;\n  });\n  const dispatch = useDispatch();\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Choose a Category:\"), categories.map(item => /*#__PURE__*/React.createElement(\"button\", {\n    key: item._id,\n    onClick: () => {\n      handleClick(item._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, item.name)));\n}\n\nexport default CategoryMenu;","map":{"version":3,"sources":["/Users/susan/Downloads/26-Stu_Actions-Reducers/client/src/components/CategoryMenu/index.js"],"names":["React","useEffect","useQuery","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","CategoryMenu","state","useSelector","dispatch","useDispatch","loading","data","categoryData","type","categories","forEach","category","then","handleClick","id","currentCategory","map","item","_id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,SACEC,iBADF,EAEEC,uBAFF,QAGO,qBAHP;AAIA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAMC,KAAK,GAAGC,WAAW,CAAED,KAAD,IAAW;AACnC,WAAOA,KAAP;AACD,GAFwB,CAAzB;AAGA,QAAME,QAAQ,GAAGC,WAAW,EAA5B;AAEA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEC;AAAjB,MAAkCZ,QAAQ,CAACG,gBAAD,CAAhD;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,YAAJ,EAAkB;AAChBJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEZ,iBADC;AAEPa,QAAAA,UAAU,EAAEF,YAAY,CAACE;AAFlB,OAAD,CAAR;AAIAF,MAAAA,YAAY,CAACE,UAAb,CAAwBC,OAAxB,CAAiCC,QAAD,IAAc;AAC5CZ,QAAAA,UAAU,CAAC,YAAD,EAAe,KAAf,EAAsBY,QAAtB,CAAV;AACD,OAFD;AAGD,KARD,MAQO,IAAI,CAACN,OAAL,EAAc;AACnBN,MAAAA,UAAU,CAAC,YAAD,EAAe,KAAf,CAAV,CAAgCa,IAAhC,CAAsCH,UAAD,IAAgB;AACnDN,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAEZ,iBADC;AAEPa,UAAAA,UAAU,EAAEA;AAFL,SAAD,CAAR;AAID,OALD;AAMD;AACF,GAjBQ,EAiBN,CAACF,YAAD,EAAeF,OAAf,EAAwBF,QAAxB,CAjBM,CAAT;;AAmBA,QAAMU,WAAW,GAAIC,EAAD,IAAQ;AAC1BX,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEX,uBADC;AAEPkB,MAAAA,eAAe,EAAED;AAFV,KAAD,CAAR;AAID,GALD;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGL,UAAU,CAACO,GAAX,CAAgBC,IAAD,iBACd;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,GADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACbL,MAAAA,WAAW,CAACI,IAAI,CAACC,GAAN,CAAX;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGD,IAAI,CAACE,IANR,CADD,CAFH,CADF;AAeD;;AAED,eAAenB,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const state = useSelector((state) => {\n    return state\n  });\n  const dispatch = useDispatch();\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"]},"metadata":{},"sourceType":"module"}